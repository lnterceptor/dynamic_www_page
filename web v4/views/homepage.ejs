<!doctype html>
<html lang="en" class="h-100">
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HomePage</title>
    <link
    rel="stylesheet"
    href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
  />
  </head>
  <style>
.container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  background-color: #f5f5f5;
  margin-top: 100px;
  padding: 100px;
 
}

.text-box { 
 
  padding: 10px;
  background-color: #ffffff;
  border-radius: 10%;
}

ul.saveBar{
      list-style: none; 
      padding: 0;
      margin: 0;
      display: flex;
      font-family: monospace;
    }
    
ul.saveBar li{
     
      border: 0px solid;
     
      flex-grow: 1;
    

}
.file-label {
  display: inline-block;
  padding: 8px 12px;
  background-color: #007bff;
  color: #fff;
  border-radius: 4px;
  cursor: pointer;
}

.file-label:hover {
  background-color: #0056b3;
}
#dontDisplay{
  visibility: hidden;
}

  </style>
  <script>

    var recipesData = <%- recipes.replace(/&#34;/g, '\\"') %>;
    
    
    const username =  '<%- username %>';
                      
    var slideIndex = 0;
    var maxNumberOfDisplayedRows = 7;


    

    function setFirstBox(){
      var showButtons = document.getElementById("buttonsForLastPage");
      showButtons.style.display = "none";

      var showIngredients = null;
    
      var recipe = recipesData[slideIndex];

      if (typeof recipe === "undefined") {
        showOtherOptions()
        return;
      }


      var all_products = [];
      var all_units = [];
      var all_amounts = [];

      for (i of JSON.parse(recipe.przepis_json).product_table){
      var inside = false; 

      var product = i.product;
      var productWeight = i.amount;
      var unit = i.unit;
      if(unit == "dag"){
        productWeight *= 10;
        unit = "g";
      }
      else if(unit == "kg" || unit == "l"){
        productWeight *= 1000;
        
        if(unit == "kg"){
          unit = "g";
        }
        else{
          unit = "ml";
        }
      }
      var iterator = 0;
      for(i of all_products){

        if(i == product){
          inside = true;
          all_amounts[iterator] = String(parseInt(productWeight) + parseInt(all_amounts[iterator]));
          break;
        }
        iterator += 1;
      }

      if(inside == false){
        all_amounts.push(productWeight);
        all_products.push(product);
        all_units.push(unit);
      }
     
      
    }

    for(let i = 0 ;i < all_products.length; i++){
      // console.log(product, productWeight)
      
      if(showIngredients !== null){
          showIngredients = showIngredients + all_products[i] +" "+ all_amounts[i] +" "+ all_units[i] + "<br>";
      }
      else{
          showIngredients =  all_products[i] +" "+ all_amounts[i] +" "+ all_units[i] +"<br>";
      }
    }

      

      var boxElement = document.getElementById("box_1");
      boxElement.textContent = "";
      boxElement.insertAdjacentHTML("beforeend",showIngredients);
    }
    

    function setSecondBox(){
      
      var showDescription = null;
      
      
      var recipe = recipesData[slideIndex];
      if (typeof recipe === "undefined") {
        return;
      }

      var rowNumber = 0;
      for (i of JSON.parse(recipe.przepis_json).description_table){
    
      
      var desc = i.description;
      
    
      
      if(showDescription !== null){
        showDescription = showDescription + desc + "<br>";
       
      }
      else{
        
        showDescription =  desc +"<br>";
        
      }
      rowNumber += 1;
      if(rowNumber == maxNumberOfDisplayedRows){
        showDescription =  showDescription + "...<br>";
        break;
      }
    }

      var boxElement = document.getElementById("box_2");
      boxElement.textContent = "";
      boxElement.insertAdjacentHTML("beforeend",showDescription);
    }

    function nextSlide(){
      var showButtons = document.getElementById("buttonsForLastPage");
      showButtons.style.display = "none";
      
      if(slideIndex < recipesData.length){ 
      slideIndex += 1;
      
      if(slideIndex == recipesData.length){
        showOtherOptions();
      }
      else{
          setFirstBox();
          setSecondBox();
      }
      }
      
    }

    function prevSlide(){
      
      if (recipesData.length === 0) {
        return;
      }

      var showButtons = document.getElementById("buttonsForLastPage");
      showButtons.style.display = "none";
      
      if(slideIndex > 0){
        slideIndex -= 1
        setFirstBox();
        setSecondBox();
        comeBackToSlides();
      }
    }

    function comeBackToSlides(){
      var ingredientsBoxElement = document.getElementById("box_1");
      var ingredientsBoxTitleElement = document.getElementById("box_1_title");
      var processBoxElement = document.getElementById("box_2");
      var processBoxTitleElement = document.getElementById("box_2_title");
      var nextButton = document.getElementById("Next");
      var selectButton = document.getElementById("Select");
      var deleteButton = document.getElementById("Delete");
      var editButton = document.getElementById("Edit");
      var exportButton = document.getElementById("Export");
      var showButtons = document.getElementById("buttonsForLastPage");


      ingredientsBoxElement.style.display = "block";
      ingredientsBoxTitleElement.style.display ="block";
      processBoxElement.style.display = "block"; 
      processBoxTitleElement.style.display = "block";
      nextButton.style.display = "inline-block";
      selectButton.style.display = "inline-block";
      deleteButton.style.display = "inline-block";
      editButton.style.display = "inline-block";
      exportButton.style.display = "inline-block";
      showButtons.style.display = "none";
    }

    function showOtherOptions(){
  
      var ingredientsBoxElement = document.getElementById("box_1");
      var ingredientsBoxTitleElement = document.getElementById("box_1_title");
      var processBoxElement = document.getElementById("box_2");
      var processBoxTitleElement = document.getElementById("box_2_title");
      var nextButton = document.getElementById("Next");
      var selectButton = document.getElementById("Select");
      var deleteButton = document.getElementById("Delete");
      var editButton = document.getElementById("Edit");
      var exportButton = document.getElementById("Export");
      var showButtons = document.getElementById("buttonsForLastPage");
      
     
      ingredientsBoxElement.style.display = "none";
      ingredientsBoxTitleElement.style.display ="none";
      processBoxElement.style.display = "none";
      processBoxTitleElement.style.display = "none";
      nextButton.style.display = "none";
      selectButton.style.display = "none";
      deleteButton.style.display = "none";
      editButton.style.display = "none";
      exportButton.style.display = "none";

      showButtons.style.display = "block";
    }

    function createRecipe(){
      
      window.location.href = "/addDishList?username=" + encodeURIComponent(username);
      
    }
    function deleteCurrentDish(){
      var  forProcessing = recipesData[slideIndex];
      var idToDelete = forProcessing.id;
      console.log(idToDelete);


      fetch('/DeletetDish', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({idToDelete})
    })
    .then(response => {
      if (response.ok) {
        location.reload();
      } else {
        location.reload();
      }
    })
    .catch(error => {
      // Handle network or fetch error
    });
    }


    function selectCurrentDish(){
      var  forProcessing = recipesData[slideIndex];
      var idToCheck = forProcessing.id;
      
      window.location.href = `/selectRecipe?username=${encodeURIComponent(username)}&idToCheck=${encodeURIComponent(idToCheck)}`;
    }


    function exportCurrentDish(){
      var  forProcessing = recipesData[slideIndex];
      delete forProcessing.id;
      delete forProcessing.user;


      var asd = JSON.stringify(forProcessing);

      // Create a Blob object with the text content
      var blob = new Blob([asd], { type: "text/plain" });

      // Create a temporary <a> element
      var link = document.createElement("a");
      link.href = URL.createObjectURL(blob);
      link.download = "data.txt"; // Set the desired filename

      // Programmatically trigger the download
      document.body.appendChild(link);
      link.click();

      // Clean up the temporary element
      document.body.removeChild(link);
    }

    function editCurrentDish(){
      var  forProcessing = recipesData[slideIndex];
      var idToCheck = forProcessing.id;
      
      window.location.href = `/addDishList?username=${encodeURIComponent(username)}&idToCheck=${encodeURIComponent(idToCheck)}`;
    }

    
  </script>
  <body>

    <div class="container  col-md-8">
      <div class = "row" >
        <div class="col-md-12", id ="box_1_title">
          <h2>Ingredients</h2>
          <div class="text-box col-md-12 ", id="box_1">
            
            <p class ="gray-text">This is the text inside the b.</p>
          </div>
        </div>
      
        <div class="col-md-12" id ="box_2_title">
          <h2>Process</h2>
          <div class="text-box col-md-12", id="box_2">
            
            <p>T Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris
              venenatis lectus eu mauris fermentum pulvinar. Suspendisse
              scelerisque consequat lacinia. In fringilla nulla a lacus
              consectetur, at placerat ipsum mollis. Suspendisse commodo lacus
              eget tortor fringilla euismod. Suspendisse potenti. Fusce efficitur
              dapibus est, eu dapibus est semper id. Nam rutrum dapibus sem, eu
              blandit nulla aliquet at.</p>
          </div>
        </div>
        
      </div>
      <div class = "row" >
        <div class="buttonsForLastPage col-md-12 ", id="buttonsForLastPage">
          <div class="col-md-12">
            <label for="ImportFile" class="file-label">
              <input type="file" id='ImportFile' accept=".txt">
            </input></label>
          </div>
          <div class="col-md-12">
            <button id="CreateRecipe" class="btn btn-dark mx-2" onclick="createRecipe()">Create Recipe</button>
          </div>
      
           
        </div>
      </div>
      
      
    </div>
   

 

    <div class="row">
      <div class="saveBar col-md-12 text-center mt-5">
        <button type="button" id="Prev" class="btn btn-dark mx-2" onclick="prevSlide()">Prev</button>
        <button type="button" id="Delete"class="btn btn-dark mx-2 " onclick="deleteCurrentDish()">Delete</button</li>
        <button type="button" id="Select"class="btn btn-dark mx-2" onclick="selectCurrentDish()">Select</button>
        <button type="button" id="Export"class="btn btn-dark mx-2" onclick="exportCurrentDish()">Export</button>
        <button type="button" id="Edit" class="btn btn-dark mx-2" onclick="editCurrentDish()">Edit</button> 
        <button type="button" id="Next" class="btn btn-dark mx-2" onclick="nextSlide()">Next</button>
      <div>

    </div>
   

    
    <label name="username" id = "dontDisplay"><%- username %></label>
   
  </body>
  <script>


    const txtFileInput = document.getElementById('ImportFile');
      
      txtFileInput.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
          const reader = new FileReader();
          
          reader.onload = function(event) {
            const content = event.target.result;
            sendData(content);
          
          };

          reader.readAsText(file);
        }
      });

    function sendData(jsonToSend){
      var replacedData = jsonToSend.replace(/\\/g, '');
      replacedData = replacedData.substring(replacedData.indexOf('{', replacedData.indexOf(':')));
      replacedData = replacedData.slice(0, -2);
      console.log(replacedData);
      fetch('/ImportDish', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ replacedData, username })
    })
    .then(response => {
      if (response.ok) {
        location.reload();
      } else {
        location.reload();
      }
    })
    .catch(error => {
      // Handle network or fetch error
    });
  }

    setFirstBox();
    setSecondBox();
    </script>
</html>